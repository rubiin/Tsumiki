@use "sass:color";

@use "functions";
@use "mixins";
@use "../theme.scss";
@use "../variable.scss";



.flat {
  border-radius: 4px;
}


.shadow {
  @extend .flat;
  box-shadow: color.mix(theme.$background-dark, black, 15%) 0 4px;
}

.bordered {
  border: 1.5px solid theme.$surface-disabled;
}

.leaf {
  border-radius: 24px 10px;
}

.leaf-inverse {
  border-radius: 10px 24px;
}

.default {
  border-radius: variable.$radius-large;
}

#panel {
  &-inner {
    $bar-opacity-ratio: variable.$bar-opacity * .01;
    $transparency-value: (
      1 - $bar-opacity-ratio) * 100%;
    background-color: color.mix(theme.$bar-background, transparent, $transparency-value
    );

  padding: variable.$bar-padding_y variable.$bar-padding_x;
  $shadow: 0 0 0 variable.$bar-border-width theme.$shadow-color,
    variable.$bar-shadow-offset variable.$bar-shadow-blur variable.$bar-shadow-spread color.adjust(theme.$shadow-color,
      $alpha: calc(variable.$bar-shadow-opacity - 1));

  box-shadow: if(variable.$bar-shadow-enabled, $shadow, none);

  @if (variable.$bar-style-panel ==floating) {
    margin: 1rem 1.5rem 0rem 1.5rem;
    border-color: theme.$surface-disabled;
  }

  @else if (variable.$bar-style-panel ==scoop) {
    margin: 0rem 4.5rem;
    border-radius: 0 0 variable.$radius * 2.2 variable.$radius * 2.2;
  }

  @else {
    border: none;

  }
}
}

.floating {
  margin: 1rem 1.5rem 0rem 1.5rem;
  border-color: theme.$surface-disabled;
}

.panel-box,
.panel-button {
  background-color: theme.$background-dark;

  @extend %label;
}

.panel-button.active{
  background-color: theme.$accent-blue;
  image, label{
    color: theme.$background-dark;
  }

}


.panel-box {
  border-radius: variable.$radius-large;
  padding: .1em .9em;
  color: theme.$text-main;
}


.panel-button {
  padding: variable.$bar-buttons-padding-x variable.$bar-buttons-padding-y;
  opacity: variable.$bar-buttons-opacity * .01;

  $shadow: 0 0 0 variable.$bar-border-width theme.$shadow-color,
    variable.$bar-buttons-shadow-offset variable.$bar-buttons-shadow-blur variable.$bar-buttons-shadow-spread color.adjust(theme.$shadow-color,
      $alpha: calc(variable.$bar-buttons-shadow-opacity - 1));

  box-shadow: if(variable.$bar-buttons-shadow-enabled, $shadow, none);

  @include mixins.widget_style(variable.$bar-style-widget);

  &:hover {
    @extend %widget_hover;
    opacity: variable.$bar-buttons-hover-opacity * .01;
    color: color.mix(theme.$text-main, #000000, 96%);
  }
}

.panel-font-icon {
  margin-left: 2px;
  margin-right: 2px;
  color: theme.$text-main;
}

.panel-text {
  font-weight: 700;
  margin-left: 10px;
}

.overlay-progress-bar {
  color: transparent;
  background-color: transparent;
  border-color: theme.$surface-disabled;
}

.overlay-icon {
  margin: 0 functions.toEm(6) 0 0;
}


tooltip {
  @extend %unset;
  opacity: variable.$bar-menus-tooltip-opacity * .01;
  background-color: theme.$background-dark;
  border-radius: variable.$bar-menus-tooltip-border-radius;

  animation: tooltipShow .25s cubic-bezier(.5, .25, 0, 1);
  border: if(variable.$bar-menus-tooltip-border-enabled, variable.$border, none);


  $shadow: 0 0 0 variable.$bar-border-width theme.$shadow-color,
    variable.$bar-menus-tooltip-shadow-offset variable.$bar-menus-tooltip-shadow-blur variable.$bar-menus-tooltip-shadow-spread color.adjust(theme.$shadow-color,
      $alpha: calc(variable.$bar-menus-tooltip-shadow-opacity - 1));

  box-shadow: if(variable.$bar-menus-tooltip-shadow-enabled, $shadow, none);

  label {
    @extend %unset;
    color: theme.$text-main;
    font-weight: variable.$bar-menus-tooltip-font-weight;
  }
}

tooltip>* {
  padding: variable.$bar-menus-tooltip-padding-y variable.$bar-menus-tooltip-padding-x;
}

menu {
  margin: functions.toEm(6);
  padding: functions.toEm(6);
  background-color: theme.$background-alt;
  background-clip: border-box;
  border-radius: 12px;
  border: variable.$border;
}


menuitem {
  transition: background-color 75ms cubic-bezier(0, 0, .2, 1);
  min-height: 30px;
  min-width: 40px;
  background-clip: border-box;
  border-radius: variable.$radius;

  arrow {
    min-height: 16px;
    min-width: 16px;
    -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
    margin-left: 8px;
  }

  separator {
    min-height: 1px;
    margin: functions.toEm(4) 0;
    background-color: theme.$background;
  }
}

menu>menuitem:hover {
  background-color: theme.$surface-highlight;
}

entry image.left {
  margin-right: 10px;
  /* space between icon and text */
}


menu>arrow {
  min-height: 16px;
  min-width: 16px;
  padding: functions.toEm(4);
  color: theme.$background-alt;
}

menu>arrow.top {
  margin-top: 0;
  border-radius: 6px;
  -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
}

menu>arrow.bottom {
  margin-top: 8px;
  margin-bottom: -12px;
  border-radius: 6px;
  -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
}

check,
radio {
  min-height: 15px;
  min-width: 15px;
  margin: functions.toEm(4);
  padding: 0;
  background-color: theme.$text-main;
  border-radius: variable.$radius-large;
  transition:
    all 75ms cubic-bezier(0, 0, .2, 1),
    box-shadow 150ms cubic-bezier(0, 0, .2, 1);
}

check {
  border-radius: 4px;
}

check:hover,
radio:hover {
  box-shadow: 0 0 0 4px color.mix(theme.$background-dark, transparent, 10%);
  background-color: theme.$text-muted;
}

check:active,
radio:active {
  box-shadow: 0 0 0 4px color.mix(theme.$background-dark, transparent, 10%);
  background-color: theme.$background-dark;
}

check:checked,
check:indeterminate,
radio:checked,
radio:indeterminate {
  color: theme.$background-dark;
  background-color: theme.$text-main;
}

check:checked {
  -gtk-icon-source: -gtk-icontheme("checkbox");
}

check:checked:hover,
check:indeterminate:hover,
radio:checked:hover,
radio:indeterminate:hover {
  box-shadow: 0 0 0 4px color.mix(theme.$text-main, transparent, 10%);
  background-color: theme.$text-main;
}

check:checked:active,
check:indeterminate:active,
radio:checked:active,
radio:indeterminate:active {
  box-shadow: 0 0 0 4px color.mix(theme.$text-main, transparent, 10%);
  background-color: theme.$text-main;
}

switch {
  transition: all 75ms cubic-bezier(0, 0, .2, 1);
  margin: functions.toEm(4) 0;
  border-radius: variable.$radius-large;
  background-color: color.mix(theme.$background, white, 90%);
  background-clip: padding-box;
  font-size: 0;
  color: transparent;

  slider {
    transition: all 75ms cubic-bezier(0, 0, .2, 1);
    min-width: 12px;
    min-height: 12px;
    margin: functions.toEm(4);
    border-radius: variable.$radius-large;
    outline: none;
    background-color: theme.$text-main;
    border: 0;
    color: transparent;
  }

  &:checked {
    background-color: #06aa58;
  }

  &:disabled {
    opacity: .5;
  }
}

@keyframes tooltipShow {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes spin {
  to {
    -gtk-icon-transform: rotate(1turn);
  }
}

expander {
  arrow {
    min-width: 16px;
    min-height: 16px;
    -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
    color: color.mix(variable.$border-color, transparent, 30%);

    &:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
    }

    &:hover {
      color: color.mix(variable.$border-color, transparent, 60%);
    }

    &:checked {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
    }
  }
}

spinner {
  background: none;
  opacity: 0;
  -gtk-icon-source: -gtk-icontheme("process-working-symbolic");
}

spinner:checked {
  opacity: 1;
  animation: spin 1s linear infinite;
}

separator {
  min-width: 1px;
  min-height: 1px;
  background-color: theme.$surface-disabled;
}


scrolledwindow {
  scrollbar {
    background-color: theme.$surface-disabled;
    border-radius: 10px;
    padding: 2px;
    margin-left: 6px;
  }

  slider {
    border-radius: 8px;
    min-width: 6px;
    min-height: 30px;
    background-color: theme.$background;

  }
}


.wallpaper-picker-box {
  @include mixins.floating-widget;
  @include mixins.spacing;
}

#wallpaper-button {
  border-radius: 10px;

  &:hover {
    background-color: theme.$background-alt;

  }
}


.window-basic {
  background-color: theme.$background-alt;
  border-radius: 20px;
  padding: 10px;
}


.sleek-border {
  border-radius: 20px;
  border-style: solid;
  border-width: 0.3px;
  border-color: theme.$surface-disabled;
}


.buttons {
  &-basic {
    border-radius: 20px;
    color: theme.$text-main;
    font-weight: 700;
    border: none;
    box-shadow: none;

    &:hover {
      background-color: theme.$surface-highlight;
      box-shadow: 0 0 5px -3px color.mix(theme.$text-main, transparent, 20%)
    }

  }

  &-transition {
    transition-property: background-color, color, box-shadow;
    transition-duration: 0.15s;
    transition-timing-function: ease-in-out;
  }
}

.chevron_icon {
  font-size: 12px;
  color: theme.$text-main;
}

#popover-overlay {
background-color: rgba(0, 0, 0, 0.0);
}
