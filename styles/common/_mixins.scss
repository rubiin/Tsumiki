@use "sass:color";
@use "../theme";
@use "../variable";


/* General */
%unset {
  outline: none;
  border: 0;
  box-shadow: none;
}

%debug {
  border: 1px solid red;
}

%clear_icon {
  -gtk-icon-transform: scale(1.05);
  -gtk-icon-effect: highlight;
}

%label {
  @extend %unset;
  color: theme.$text-main;
  font-weight: variable.$font-weight;
}

%widget_hover {
  background-color: theme.$background;
  transition: border-color 400ms ease-in-out;
}

%desktop-widget {
  transition: color .5s ease;
  color: theme.$text-main;
  font-family: "Jost*", sans-serif;
}

/* General Typography */
%large_title {
  font-weight: 600;
  font-size: 32px;
}

%title_1 {
  font-weight: 800;
  font-size: 27px;
}

%title_2 {
  font-weight: 800;
  font-size: 20px;
}

%title_3 {
  font-weight: 700;
  font-size: 20px;
}

%title_4 {
  font-weight: 700;
  font-size: 18px;
}

%title_5 {
  font-weight: 700;
  font-size: 16px;
}

%heading {
  font-weight: 700;
  font-size: 14.6px;
}

%caption_heading {
  font-weight: 700;
  font-size: 13px;
}

%caption {
  font-weight: 400;
  font-size: 12px;
}

%smaller {
  font-weight: 400;
  font-size: 12px;
}

%widget {
  transition: 200ms;
  border-radius: variable.$radius;
  color: theme.$text-main;
  background-color: theme.$background-alt;
  border: variable.$border;
}

@mixin slider($height: 11px,
  $highlight-color: white,
  $slider: false,
  $radius: variable.$radius,
  $slider-color: theme.$background-dark,
  $min-length: "",

) {
  trough {
    transition: 200ms;
    border-radius: $radius;
    border: variable.$border;
    background-color: $slider-color;
    min-height: $height;
    min-width: $height;

    highlight,
    progress {
      border-radius: max($radius - variable.$border-width, 0);
      background-color: $highlight-color;
      min-height: $height;

      &:hover {
        background-color: color.mix($highlight-color,
            black, 80%);
      }
    }
  }

  @if $min-length !="" {
    scale {
      min-width: $min-length;
    }
  }

  @if $slider {
    slider {
      background-color: theme.$text-main;
      border-color: variable.$border-color;
      box-shadow: 0 0 3px 0 theme.$shadow-color;
      border: variable.$border-width solid transparent;
      transition: 200ms;
      border-radius: variable.$radius-large;
      min-height: $height;
      min-width: $height;
      margin: -0.5em;

      &:hover {
        background-color: color.mix(theme.$text-main,
            black, 90%);
      }
    }
  }

  &:disabled {

    highlight,
    progress {
      background-color: color.mix(theme.$text-main, transparent, 60%);
      background-image: none;
    }
  }
}

@mixin floating-widget($radius: variable.$bar-menus-popover-border-radius) {

  $shadow: 0 0 0 variable.$bar-border-width theme.$shadow-color,
    variable.$bar-menus-popover-shadow-offset variable.$bar-menus-popover-shadow-blur variable.$bar-menus-popover-shadow-spread color.adjust(theme.$shadow-color,
      $alpha: calc(variable.$bar-menus-popover-shadow-opacity - 1));

  box-shadow: if(variable.$bar-menus-popover-shadow-enabled, $shadow, none);
  margin: max(variable.$spacing, 8px);
  border: if(variable.$bar-menus-popover-border-enabled, variable.$bar-menus-popover-border-width solid variable.$popover-border-color, none);
  background-color: theme.$background-dark;
  color: theme.$text-main;
  border-radius: $radius;
  padding: variable.$bar-menus-popover-padding_x variable.$bar-menus-popover-padding_y;
}

@mixin switch {
  slider {
    background-color: theme.$background-dark;
    border-radius: variable.$radius-large;
    min-width: 24px;
    min-height: 24px;
  }

  image {
    color: transparent;
  }
}

@mixin spacing($multiplier: 1, $spacing: variable.$spacing, $rec: false) {
  &.horizontal>* {
    margin: 0 calc($spacing * $multiplier / 2);

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }

  &.vertical>* {
    margin: calc($spacing * $multiplier / 2) 0;

    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  @if $rec {
    box {
      &.horizontal>* {
        margin: 0 $spacing * $multiplier / 2;

        &:first-child {
          margin-left: 0;
        }

        &:last-child {
          margin-right: 0;
        }
      }

      &.vertical>* {
        margin: $spacing * $multiplier / 2 0;

        &:first-child {
          margin-top: 0;
        }

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}


@mixin widget_style($type) {
  @if $type ==flat {
    @extend .flat;
  }


  @else if $type ==shadow {
    @extend .shadow;
  }

  @else if $type ==bordered {
    @extend .bordered;
  }

  @else if $type ==leaf {
    @extend .leaf;
  }

  @else if $type ==leaf-inverse {
    @extend .leaf-inverse;
  }

  @else {
    @extend .default;
  }
}
